#!/usr/bin/env sh
#-
# Copyright (c) 2020-2021 Hervy Qurrotul Ainu Rozi <hervyqa@pm.me>.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#-

# Make sure we don't inherit these from env.

name=$(basename "$0")
installdir=$(which basename)
version="1.2"
license="BSD 2-Clause"
type=$(lsb_release -c | cut -f 2)
musl=$(xbps-query -v -L | grep musl | rev | cut -c17)

usage()
{
echo
echo "script  : \033[1;33mLangitKetujuh Tools\033[0m"
echo "version : v$version"
    cat <<- EOF
license : $license
usage   : $name [option]
option  : --update      -u    update system

          --adobe-icc   -a    install adobe icc
          --separate+   -p    install separate+ gimp
          --ms-fonts    -m    install microsoft fonts

          --wine-emu    -w    install wine emulator
          --fish        -s    install fish shell

          --fix-lm      -lm   fix lite-musl
          --fix-lg      -lg   fix lite-glibc
          --fix-pm      -pm   fix pro-musl
          --fix-pg      -pg   fix pro-glibc
          --fix-fonts   -f    fix bitmap fonts

          --help        -h    show this help
          --version     -v    show $name version

EOF
}

gitpro="https://gitlab.com/langitketujuh/pro"
gitlite="https://gitlab.com/langitketujuh/lite"
tmp="/tmp"
for arg in "$@"; do
    case $arg in
        --script|-s)
            sudo sh -c "curl -fsSL https://langitketujuh.id/sh/l7-tools" > /usr/bin/l7-tools
            chmod +x /usr/bin/l7-tools
            echo ">>>> Finish..."
            ;;
        --update|-u)
          sudo xbps-install -Su
            if [ $type = 'lite-musl' ];
              then
              echo ">>>> Remove old /tmp"
              sudo rm -rf $tmp/lite
              echo ">>>> Remove old skeleton"
              sudo rm -rf /etc/skel/.config
              echo ">>>> Clone GIT"
              git clone --depth 1 $gitlite $tmp/lite >/dev/null 2>&1
              cd $tmp/lite/musl
              echo ">>>> Copying update"
              sudo cp -rf * /
              echo ">>>> Update $type finish..."
            elif [ $type = 'lite-glibc' ];
              then
              echo ">>>> Remove old /tmp"
              sudo rm -rf $tmp/lite
              echo ">>>> Remove old skeleton"
              sudo rm -rf /etc/skel/.config
              echo ">>>> Clone GIT"
              git clone --depth 1 $gitlite $tmp/lite >/dev/null 2>&1
              cd $tmp/lite/glibc
              echo ">>>> Copying update"
              sudo cp -rf * /
              echo ">>>> Update $type finish..."
            elif [ $type = 'pro-musl' ];
              then
              echo ">>>> Remove old /tmp"
              sudo rm -rf $tmp/pro
              echo ">>>> Remove old skeleton"
              sudo rm -rf /etc/skel/.config
              echo ">>>> Clone GIT"
              git clone --depth 1 $gitlite $tmp/pro >/dev/null 2>&1
              cd $tmp/pro/musl
              echo ">>>> Copying update"
              sudo cp -rf * /
              echo ">>>> Update $type finish..."
            elif [ $type = 'pro-glibc' ];
              then
              echo ">>>> Remove old /tmp"
              sudo rm -rf $tmp/pro
              echo ">>>> Remove old skeleton"
              sudo rm -rf /etc/skel/.config
              echo ">>>> Clone GIT"
              git clone --depth 1 $gitlite $tmp/pro >/dev/null 2>&1
              cd $tmp/pro/glibc
              echo ">>>> Copying update"
              sudo cp -rf * /
              echo ">>>> Update $type finish..."
            else
              echo '>>>> Update is failed. Please see \033[1;33ml7-tools --help\033[0m'
            fi
            ;;
        --adobe-icc|-a)
            echo ">>>> Remove old /tmp"
            rm -rf /tmp/adobe-icc
            echo ">>>> Preparing new dir /tmp"
            mkdir /tmp/adobe-icc
            cd /tmp/adobe-icc
            echo ">>>> Download Adobe ICC Profiles"
            wget -c https://download.adobe.com/pub/adobe/iccprofiles/mac/AdobeICCProfilesCS4Mac_end-user.zip >/dev/null 2>&1
            echo ">>>> Unzip"
            unzip AdobeICCProfilesCS4Mac_end-user.zip >/dev/null 2>&1
            echo ">>>> Installing"
            sudo install -D -m644 -t /usr/share/color/icc/adobe/rgb */RGB/*.icc
            sudo install -D -m644 -t /usr/share/color/icc/adobe/cmyk */CMYK/*.icc
            sudo install -D -m644 -t /usr/share/doc/adobe-icc */*.pdf
            echo ">>>> Finish..."
            ;;
        --separate+|-p)
            echo ">>>> Install depedency"
            sudo xbps-install -Sy mesa-dri gimp gimp-python gimp-devel lcms lcms-devel gettext gettext-devel
            echo ">>>> Remove old /tmp"
            rm -rf /tmp/separate+
            echo ">>>> Preparing new dir /tmp"
            mkdir /tmp/separate+
            cd /tmp/separate+
            echo ">>>> Download source code"
            wget -ncv "https://osdn.net/projects/separate-plus/downloads/51630/separate%2B-0.5.9-alpha3.zip" -O "separate+-0.5.9-alpha3.zip" >/dev/null 2>&1
            unzip separate+-0.5.9-alpha3.zip >/dev/null 2>&1
            cd separate+-0.5.9/
            echo ">>>> Installing"
            make >/dev/null 2>&1
            sudo make PREFIX="/usr" install
            sudo install -dm755 /usr/share/gimp/2.0/scripts
            sudo install -m644 sample-scripts/* /usr/share/gimp/2.0/scripts
            echo ">>>> Finish..."
            ;;
        --ms-fonts|-m)
            echo ">>>> Remove old /tmp"
            mkdir -p /tmp/ms-corefonts/
            mkdir -p $HOME/.fonts/ms-corefonts/
            cd /tmp/ms-corefonts/
            echo ">>>> Download Fonts"
            echo ">>>> Downloading webdin32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/webdin32.exe/download" -O webdin32.exe >/dev/null 2>&1
            echo ">>>> Downloading verdan32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/verdan32.exe/download" -O verdan32.exe >/dev/null 2>&1
            echo ">>>> Downloading trebuc32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/trebuc32.exe/download" -O trebuc32.exe >/dev/null 2>&1
            echo ">>>> Downloading times32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/times32.exe/download" -O times32.exe >/dev/null 2>&1
            echo ">>>> Downloading impact32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/impact32.exe/download" -O impact32.exe >/dev/null 2>&1
            echo ">>>> Downloading georgi32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/georgi32.exe/download" -O georgi32.exe >/dev/null 2>&1
            echo ">>>> Downloading courie32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/courie32.exe/download" -O courie32.exe >/dev/null 2>&1
            echo ">>>> Downloading comic32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/comic32.exe/download" -O comic32.exe >/dev/null 2>&1
            echo ">>>> Downloading arialb32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/arialb32.exe/download" -O arialb32.exe >/dev/null 2>&1
            echo ">>>> Downloading arial32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/arial32.exe/download" -O arial32.exe >/dev/null 2>&1
            echo ">>>> Downloading andale32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/andale32.exe/download" -O andale32.exe >/dev/null 2>&1
            echo ">>>> Extract fonts"
            7z -y x webdin32.exe >/dev/null 2>&1
            7z -y x verdan32.exe >/dev/null 2>&1
            7z -y x trebuc32.exe >/dev/null 2>&1
            7z -y x times32.exe >/dev/null 2>&1
            7z -y x impact32.exe >/dev/null 2>&1
            7z -y x georgi32.exe >/dev/null 2>&1
            7z -y x courie32.exe >/dev/null 2>&1
            7z -y x comic32.exe >/dev/null 2>&1
            7z -y x arialb32.exe >/dev/null 2>&1
            7z -y x arial32.exe >/dev/null 2>&1
            7z -y x andale32.exe >/dev/null 2>&1
            echo ">>>> Install to Personal Fonts"
            mv *.TTF $HOME/.fonts/ms-corefonts/
            mv *.ttf $HOME/.fonts/ms-corefonts/
            echo ">>>> Build cache fonts..."
            fc-cache -f
            sudo xbps-reconfigure -v -f fontconfig >/dev/null 2>&1
            echo ">>>> Finish..."
            ;;
        --wine-emu|-w)
            if [ $musl = 'm' ]; then
              sudo xbps-install wine wine-common wine-gecko wine-tools wine-mono winetricks zenity
              echo ">>>> Finish..."
            else
              sudo xbps-install wine wine-32bit wine-common wine-gecko wine-tools wine-mono winetricks zenity
              echo ">>>> Finish..."
            fi
            ;;
        --fish|-s)
            echo ">>>> Install Fish shell"
            sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo ">>>> Apply Fish Shell"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            echo ">>>> Finish..."
            ;;
        --fix-fonts|-f)
            sudo ln -s /usr/share/fontconfig/conf.avail/10-hinting-slight.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/50-user.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/70-no-bitmaps.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo xbps-reconfigure -f fontconfig
            echo ">>>> Finish..."
            ;;
        --fix-lm|-lm)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="lite-musl"#'
            ;;
        --fix-lg|-lg)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="lite-glibc"#'
            ;;
        --fix-pm|-pm)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="pro-musl"#'
            ;;
        --fix-pg|-pg)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="pro-glibc"#'
            ;;
        --help|-h)
            usage
            exit 0
            ;;
        --version|-v)
            echo "\033[1;33m $name\033[0m version $version"
            exit 0
            ;;
        *)
            echo "Please run : \033[1;33ml7-tools --update\033[0m"
            exit 2
    esac
done
