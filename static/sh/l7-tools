#!/usr/bin/env bash

NAME=$(basename "$0")
INSTALLDIR=$(which basename)
VERSION="v1.1"
LICENSE="GNU GPLV3+"

usage()
{
echo
echo "=============== LangitKetujuh Tools \033[1;33m$VERSION\033[0m ================"

    cat <<- EOF
 
 license :  $LICENSE
 usage   :  $NAME [option]
 option  :  --update        update l7-tools script
            --lite-musl     update lite-musl
            --lite-glibc    update lite-glibc
            --pro-musl      update pro-musl
            --pro-glibc     update pro-glibc
            --adobe-icc     install adobe icc
            --ms-fonts      install ms fonts
            --help, -h      show this help
            --version, -v   show $NAME version

 ========================================================

EOF
}

GITPRO="https://gitlab.com/langitketujuh/pro"
GITLITE="https://gitlab.com/langitketujuh/lite"
TMP="/tmp"
PRO="pro"
LITE="lite"

for arg in "$@"; do
    case $arg in
        --update|-u)
            sudo sh -c "curl -fsSL https://langitketujuh.id/sh/l7-tools" >> /usr/bin/l7-tools
            chmod +x /usr/bin/l7-tools
            echo ">>>> Finish..."
            ;;
        --lite-musl)
            echo ">>>> Remove old /tmp"
            sudo rm -rf $TMP/$LITE
            echo ">>>> Remove old skeleton"
            sudo rm -rf /etc/skel/.config
            echo ">>>> Clone GIT"
            git clone --depth 1 $GITLITE $TMP/$LITE >/dev/null 2>&1
            cd $TMP/$LITE/musl
            echo ">>>> Copying update"
            sudo cp -rf * /
            echo ">>>> Install Fish shell"
	        sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo ">>>> Apply Fish Shell"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            echo ">>>> Finish..."
            ;;
        --lite-glibc)
            echo ">>>> Remove old /tmp"
            sudo rm -rf $TMP/$LITE
            echo ">>>> Remove old skeleton"
            sudo rm -rf /etc/skel/.config
            echo ">>>> Clone GIT"
            git clone --depth 1 $GITLITE $TMP/$LITE >/dev/null 2>&1
            cd $TMP/$LITE/glibc
            echo ">>>> Copying update"
            sudo cp -rf * /
            echo ">>>> Install Fish shell"
	        sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo ">>>> Apply Fish Shell"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            echo ">>>> Finish..."
            ;;
        --pro-musl)
            echo ">>>> Remove old /tmp"
            sudo rm -rf $TMP/$PRO
            echo ">>>> Remove old skeleton"
            sudo rm -rf /etc/skel/.config
            echo ">>>> Clone GIT"
            git clone --depth 1 $GITPRO $TMP/$PRO >/dev/null 2>&1
            cd $TMP/$PRO/musl
            echo ">>>> Copying update"
            sudo cp -rf * /
            echo ">>>> Install Fish shell"
	        sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo ">>>> Apply Fish Shell"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            echo ">>>> Finish..."
            ;;
        --pro-glibc)
            echo ">>>> Remove old /tmp"
            sudo rm -rf $TMP/$PRO
            echo ">>>> Remove old skeleton"
            sudo rm -rf /etc/skel/.config
            echo ">>>> Clone GIT"
            git clone --depth 1 $GITPRO $TMP/$PRO >/dev/null 2>&1
            cd $TMP/$PRO/glibc
            echo ">>>> Copying update"
            sudo cp -rf * /
            echo ">>>> Install Fish shell"
            sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo ">>>> Apply Fish Shell"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            echo ">>>> Finish..."
            ;;
        --adobe-icc)
            echo ">>>> Remove old /tmp"
            rm -rf /tmp/adobe-icc
            echo ">>>> Preparing new dir /tmp"
            mkdir /tmp/adobe-icc
            cd /tmp/adobe-icc
            echo ">>>> Download Adobe ICC Profiles"
            wget -c http://download.adobe.com/pub/adobe/iccprofiles/win/AdobeICCProfilesCS4Win_end-user.zip >/dev/null 2>&1
            echo ">>>> Unzip"
            unzip AdobeICCProfilesCS4Win_end-user.zip >/dev/null 2>&1
            cd "Adobe ICC Profiles (end-user)/"
            echo ">>>> Installing"
            sudo cp -rf CMYK /usr/share/color/icc/
            sudo cp -rf RGB /usr/share/color/icc/
            echo ">>>> Finish..."
            ;;
        --ms-fonts)
            echo ">>>> Remove old /tmp"
            mkdir -p /tmp/ms-corefonts/
            mkdir -p $HOME/.fonts/ms-corefonts/
            cd /tmp/ms-corefonts/
            echo ">>>> Download Fonts"
            echo ">>>> Downloading webdin32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/webdin32.exe/download" -O webdin32.exe >/dev/null 2>&1
            echo ">>>> Downloading verdan32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/verdan32.exe/download" -O verdan32.exe >/dev/null 2>&1
            echo ">>>> Downloading trebuc32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/trebuc32.exe/download" -O trebuc32.exe >/dev/null 2>&1
            echo ">>>> Downloading times32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/times32.exe/download" -O times32.exe >/dev/null 2>&1
            echo ">>>> Downloading impact32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/impact32.exe/download" -O impact32.exe >/dev/null 2>&1
            echo ">>>> Downloading georgi32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/georgi32.exe/download" -O georgi32.exe >/dev/null 2>&1
            echo ">>>> Downloading courie32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/courie32.exe/download" -O courie32.exe >/dev/null 2>&1
            echo ">>>> Downloading comic32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/comic32.exe/download" -O comic32.exe >/dev/null 2>&1
            echo ">>>> Downloading arialb32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/arialb32.exe/download" -O arialb32.exe >/dev/null 2>&1
            echo ">>>> Downloading arial32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/arial32.exe/download" -O arial32.exe >/dev/null 2>&1
            echo ">>>> Downloading andale32 fonts"
            wget -c -nv "https://sourceforge.net/projects/corefonts/files/the%20fonts/final/andale32.exe/download" -O andale32.exe >/dev/null 2>&1
            echo ">>>> Extract fonts"
            7z -y x webdin32.exe >/dev/null 2>&1
            7z -y x verdan32.exe >/dev/null 2>&1
            7z -y x trebuc32.exe >/dev/null 2>&1
            7z -y x times32.exe >/dev/null 2>&1
            7z -y x impact32.exe >/dev/null 2>&1
            7z -y x georgi32.exe >/dev/null 2>&1
            7z -y x courie32.exe >/dev/null 2>&1
            7z -y x comic32.exe >/dev/null 2>&1
            7z -y x arialb32.exe >/dev/null 2>&1
            7z -y x arial32.exe >/dev/null 2>&1
            7z -y x andale32.exe >/dev/null 2>&1
            echo ">>>> Install to Personal Fonts"
            mv *.TTF $HOME/.fonts/ms-corefonts/
            mv *.ttf $HOME/.fonts/ms-corefonts/
            echo ">>>> Build cache fonts..."
            fc-cache -f
            sudo xbps-reconfigure -v -f fontconfig >/dev/null 2>&1
            echo ">>>> Finish..."
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        -v|--version)
            echo "\033[1;33m $NAME\033[0m version $VERSION"
            exit 0
            ;;
        *)
            printf "\noption does not exist: %s\n\n" "$arg"
            exit 2
    esac
done
