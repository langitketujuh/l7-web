#!/usr/bin/env bash
#-
# Copyright (c) 2020-2021 Hervy Qurrotul Ainur Rozi <hervyqa@pm.me>.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#-

# Make sure we don't inherit these from env.

title="LangitKetujuh Tools"
name=$(basename "$0")
installdir=$(which basename)
version="1.4"
license="BSD 2-Clause"
type=$(lsb_release -c | cut -f 2)
musl=$(xbps-query -v -L | grep musl | rev | cut -c17)
gitpro="https://gitlab.com/langitketujuh/pro"
gitlite="https://gitlab.com/langitketujuh/lite"
void_packages="git://github.com/void-linux/void-packages.git"
tmp="$HOME/.cache"
repo="hostdir/binpkgs/"

usage()
{
echo -e "\n\033[1;33m$title $version\033[0m"
echo -e "\e[3mConfiguring tool and installing third party\e[0m"
echo
    cat <<- EOF
license : $license
usage   : $name [option]
option  :
          --update      -u    update system
          --install     -i    install l7-tools from web

        color profile:
          --adobe-icc   -a    install adobe icc
          --idea-icc    -d    install idealliance icc
          --eci-icc     -e    install eci icc
          --jpma-icc    -j    install jpma icc
          --vigc-icc    -g    install vigc icc
          --snap-icc    -g    install snap committee icc

        xbps-src:
          --msttcorefonts     install microsoft fonts

        xbps-src (glibc):
          --anydesk           install anydesk
          --brother-brscan4   install brother scan driver
          --cnijfilter2       install canon printer driver
          --discord           install discord
          --epson-inkjet2     install epson inkject 2 printer driver
          --google-chrome     install google chrome
          --opera             install opera browser
          --skype             install skype
          --slack-desktop     install slack desktop
          --spotify           install spotify
          --teams-bin         install microsoft teams
          --wps-office        install wps-office
          --zoom              install zoom

        from repo:
          --wine-emu    -w    install wine emulator
          --fish        -s    install fish shell

        plugin:
          --separate+   -p    install separate+ gimp

        fix something:
          --fix-lm      -lm   fix lite-musl
          --fix-lg      -lg   fix lite-glibc
          --fix-pm      -pm   fix pro-musl
          --fix-pg      -pg   fix pro-glibc
          --fix-fonts   -f    fix bitmap fonts

          --help        -h    show this help
          --version     -v    show $name version

EOF
}

build_void_packages() {

  echo -e "\033[1;36m[1]\033[0m Clone $void_packages to $tmp"
  cd $tmp
  git clone --depth 1 $void_packages >/dev/null 2>&1
  cd void-packages/
  echo -e "\033[1;36m[2]\033[0m Pull repo"
  git config pull.rebase false
  git pull >/dev/null 2>&1
  echo -e "\033[1;36m[3]\033[0m Preparing binary-bootstrap"
  ./xbps-src binary-bootstrap
  echo -e "\033[1;36m[4]\033[0m Allow restricted"
  echo XBPS_ALLOW_RESTRICTED=yes > etc/conf
  echo -e "\033[1;36m[5]\033[0m Build $packages"
  ./xbps-src pkg $packages
  if [ $nonfree -eq 1 ]; then
    echo -e "\033[1;36m[6]\033[0m Install nonfree $packages"
    sudo xbps-install -y --repository=$repo/nonfree $packages
    else
    echo -e "\033[1;36m[6]\033[0m Install $packages"
    sudo xbps-install -y --repository=$repo/ $packages
  fi
  if xbps-query -S $packages > /tmp/checkers >/dev/null 2>&1; then
    echo -e "\033[1;36m[FINISH]\033[0m $packages installed"
    else
    echo -e "\033[1;33m[FAILED]\033[0m $packages not installed!"
    exit;
    fi
}

for arg in "$@"; do
    case $arg in
        --install|-i)
            sudo wget 'https://langitketujuh.id/sh/l7-tools' -O /usr/bin/l7-tools
            sudo chmod +x /usr/bin/l7-tools
            if ls -lh /usr/bin/l7-tools > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH] l7-tools installed.\033[0m"
              else
              echo -e "\033[1;33m[FAILED] l7-tools not installed!\033[0m"
              exit;
              fi
            ;;
        --update|-u)
            read -e -p $'\e[1;36m[1]\e[0m Update system (Y/n): ' update
            if [[ $update =~ ^[Yy]$ ]]; then
              echo -e "[*] Update: \033[1;36m[Yes]\033[0m"
              sudo xbps-install -Suy
              else
              echo -e "[-] Update: \033[1;33m[No]\033[0m"
            fi
            if [ $type = 'lite-musl' ];
              then
              echo -e "\033[1;36m[2]\033[0m Remove config skeleton"
              sudo rm -rf /etc/skel/.config
              echo -e "\033[1;36m[3]\033[0m Clone repo"
              git clone --depth 1 $gitlite $tmp/lite >/dev/null 2>&1
              cd $tmp/lite/musl
              echo -e "\033[1;36m[4]\033[0m Pull repo"
              git config pull.rebase false
              git pull >/dev/null 2>&1
              echo -e "\033[1;36m[5]\033[0m\033[0m Install update"
              sudo cp -rf * /
              echo -e "\033[1;36m[6]\033[0m\033[0m Update grub distributor"
              sudo sed -i /etc/default/grub -res'#^(GRUB_DISTRIBUTOR).*#GRUB_DISTRIBUTOR="LangitKetujuh"#'
              echo -e "\033[1;36m[FINISH]\033[0m Update $type done"
            elif [ $type = 'lite-glibc' ];
              then
              echo -e "\033[1;36m[2]\033[0m Remove config skeleton"
              sudo rm -rf /etc/skel/.config
              echo -e "\033[1;36m[3]\033[0m Clone repo"
              git clone --depth 1 $gitlite $tmp/lite >/dev/null 2>&1
              cd $tmp/lite/glibc
              echo -e "\033[1;36m[4]\033[0m Pull repo"
              git config pull.rebase false
              git pull >/dev/null 2>&1
              echo -e "\033[1;36m[5]\033[0m Install update"
              sudo cp -rf * /
              echo -e "\033[1;36m[6]\033[0m\033[0m Update grup distributor"
              sudo sed -i /etc/default/grub -res'#^(GRUB_DISTRIBUTOR).*#GRUB_DISTRIBUTOR="LangitKetujuh"#'
              echo -e "\033[1;36m[FINISH]\033[0m Update $type done"
            elif [ $type = 'pro-musl' ];
              then
              echo -e "\033[1;36m[2]\033[0m Remove config skeleton"
              sudo rm -rf /etc/skel/.config
              echo -e "\033[1;36m[3]\033[0m Clone repo"
              git clone --depth 1 $gitpro $tmp/pro >/dev/null 2>&1
              cd $tmp/pro/musl
              echo -e "\033[1;36m[4]\033[0m Pull repo"
              git config pull.rebase false
              git pull >/dev/null 2>&1
              echo -e "\033[1;36m[5]\033[0m Install update"
              sudo cp -rf * /
              echo -e "\033[1;36m[6]\033[0m\033[0m Update grup distributor"
              sudo sed -i /etc/default/grub -res'#^(GRUB_DISTRIBUTOR).*#GRUB_DISTRIBUTOR="LangitKetujuh"#'
              echo -e "\033[1;36m[FINISH]\033[0m Update $type done"
            elif [ $type = 'pro-glibc' ];
              then
              echo -e "\033[1;36m[2]\033[0m Remove config skeleton"
              sudo rm -rf /etc/skel/.config
              echo -e "\033[1;36m[3]\033[0m Clone repo"
              git clone --depth 1 $gitpro $tmp/pro >/dev/null 2>&1
              cd $tmp/pro/glibc
              echo -e "\033[1;36m[4]\033[0m Pull repo"
              git config pull.rebase false
              git pull >/dev/null 2>&1
              echo -e "\033[1;36m[5]\033[0m Install update"
              sudo cp -rf * /
              echo -e "\033[1;36m[6]\033[0m\033[0m Update grup distributor"
              sudo sed -i /etc/default/grub -res'#^(GRUB_DISTRIBUTOR).*#GRUB_DISTRIBUTOR="LangitKetujuh"#'
              echo -e "\033[1;36m[FINISH]\033[0m Update $type done"
            else
              echo -e "\033[1;36m[FAILED]\033[0m. Please see \033[1;33ml7-tools --help"
            fi
            ;;
        --anydesk)
            packages="anydesk"
            nonfree="0"
            build_void_packages
            ;;
        --brother-brscan4)
            packages="brother-brscan4"
            nonfree="1"
            build_void_packages
            ;;
        --cnijfilter2)
            packages="cnijfilter2"
            nonfree="1"
            build_void_packages
            ;;
        --discord)
            packages="discord"
            nonfree="1"
            build_void_packages
            ;;
        --epson-inkjet2)
            packages="epson-inkjet-printer-escpr2"
            nonfree="1"
            build_void_packages
            ;;
        --google-chrome)
            packages="google-chrome"
            nonfree="1"
            build_void_packages
            ;;
        --opera)
            packages="opera"
            nonfree="1"
            build_void_packages
            ;;
        --msttcorefonts)
            packages="msttcorefonts"
            nonfree="1"
            build_void_packages
            fc-cache -f
            sudo xbps-reconfigure -v -f fontconfig >/dev/null 2>&1
            ;;
        --skype)
            packages="skype"
            nonfree="1"
            build_void_packages
            ;;
        --slack-desktop)
            packages="slack-desktop"
            nonfree="1"
            build_void_packages
            ;;
        --spotify)
            packages="spotify"
            nonfree="1"
            build_void_packages
            ;;
        --steam)
            packages="steam"
            nonfree="1"
            build_void_packages
            echo -e "\033[1;36m[+]\033[0m Install depedency"
            sudo xbps-install -Sy void-repo-multilib{,-nonfree}
            sudo xbps-install -Sy libgcc-32bit libstdc++-32bit libdrm-32bit libglvnd-32bit
            echo -e "\033[1;36m[FINISH]\033[0m Install depedency"
            ;;
        --teams-bin)
            packages="teams-bin"
            nonfree="1"
            build_void_packages
            ;;
        --vivaldi)
            packages="vivaldi"
            nonfree="1"
            build_void_packages
            ;;
        --wps-office)
            packages="wps-office"
            nonfree="0"
            build_void_packages
            ;;
        --zoom)
            packages="zoom"
            nonfree="1"
            build_void_packages
            ;;
        --adobe-icc|-a)
            echo -e "\033[1;36m[1]\033[0m Preparing new dir $tmp"
            mkdir $tmp/adobe-icc >/dev/null 2>&1
            cd $tmp/adobe-icc
            echo -e "\033[1;36m[2]\033[0m Download Adobe ICC Profiles"
            wget -c https://download.adobe.com/pub/adobe/iccprofiles/mac/AdobeICCProfilesCS4Mac_end-user.zip >/dev/null 2>&1
            echo -e "\033[1;36m[3]\033[0m Unzip"
            unzip -o -q AdobeICCProfilesCS4Mac_end-user.zip >/dev/null 2>&1
            echo -e "\033[1;36m[4]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/adobe/rgb */RGB/*.icc
            sudo install -D -m644 -t /usr/share/color/icc/adobe/cmyk */CMYK/*.icc
            sudo install -D -m644 -t /usr/share/doc/adobe */*.pdf
            if ls -lh /usr/share/color/icc/adobe/cmyk | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m Adobe ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m Adobe ICC not installed!"
              exit;
              fi
            ;;
        --eci-icc|-e)
            echo -e "\033[1;36m[1] Preparing new dir $tmp"
            mkdir $tmp/eci-icc >/dev/null 2>&1
            cd $tmp/eci-icc
            echo -e "\033[1;36m[2]\033[0m\033[0m Download ECI ICC Profiles"
            wget -c http://www.color.org/registry/profiles/PSOcoated_v3.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/PSOuncoated_v3_FOGRA52.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/PSOsc-b_paper_v3_FOGRA54.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/SC_paper_eci.icc >/dev/null 2>&1
            echo -e "\033[1;36m[3]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/eci *.icc
            if ls -lh /usr/share/color/icc/eci | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m ECI ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m ECI ICC not installed!"
              exit;
              fi
            ;;
        --idea-icc|-d)
            echo -e "\033[1;36m[1]\033[0m Preparing new dir $tmp"
            mkdir $tmp/idea-icc >/dev/null 2>&1
            cd $tmp/idea-icc
            echo -e "\033[1;36m[2]\033[0m Download IDEAlliance ICC Profiles"
            wget -c http://www.color.org/registry/profiles/JapanColor2011Coated.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC7.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC6.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/GRACoL2013_CRPC6.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/GRACoL2006_Coated1v2.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC5.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/SWOP2013C3_CRPC5.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/SWOP2006_Coated3v2.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC4.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC3.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/GRACoL2013UNC_CRPC3.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/SWOP2006_Coated5v2.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC2.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/CGATS21_CRPC1.icc >/dev/null 2>&1
            echo -e "\033[1;36m[3]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/idealliance *.icc
            if ls -lh /usr/share/color/icc/idealliance | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m IDEAlliance ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m IDEAlliance ICC not installed!"
              exit;
              fi            
            ;;
        --jpma-icc|-j)
            echo -e "\033[1;36m[1]\033[0m Preparing new dir $tmp"
            mkdir $tmp/jpma-icc >/dev/null 2>&1
            cd $tmp/jpma-icc
            echo -e "\033[1;36m[2]\033[0m Download Japan Printing Machinery Association ICC Profiles"
            wget -c http://www.color.org/registry/profiles/JapanColor2011Coated.icc >/dev/null 2>&1
            echo -e "\033[1;36m[3]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/jpma *.icc
            if ls -lh /usr/share/color/icc/jpma | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m Japan Printing Machinery Association ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m Japan Printing Machinery Association ICC not installed!"
              exit;
              fi
            ;;
        --vigc-icc|-g)
            echo -e "\033[1;36m[1]\033[0m Preparing new dir $tmp"
            mkdir $tmp/vigc-icc >/dev/null 2>&1
            cd $tmp/vigc-icc
            echo -e "\033[1;36m[2]\033[0m Download VIGC ICC Profiles"
            wget -c http://www.color.org/registry/profiles/Coated_Fogra39L_VIGC_300.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/Coated_Fogra39L_VIGC_260.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/Uncoated_Fogra47L_VIGC_260.icc >/dev/null 2>&1
            wget -c http://www.color.org/registry/profiles/Uncoated_Fogra47L_VIGC_300.icc >/dev/null 2>&1
            echo -e "\033[1;36m[3]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/vigc *.icc
            if ls -lh /usr/share/color/icc/vigc | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m VIGC ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m VIGC ICC not installed!"
              exit;
              fi
            ;;
        --snap-icc|-g)
            echo -e "\033[1;36m[1]\033[0m Preparing new dir $tmp"
            mkdir $tmp/snap-icc >/dev/null 2>&1
            cd $tmp/snap-icc
            echo -e "\033[1;36m[2]\033[0m Download SNAP Committee ICC Profiles"
            wget -c http://www.color.org/registry/profiles/SNAP2007.icc >/dev/null 2>&1
            echo -e "\033[1;36m[4]\033[0m Installing"
            sudo install -D -m644 -t /usr/share/color/icc/snap *.icc
            if ls -lh /usr/share/color/icc/snap | grep icc > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m SNAP Committee ICC installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m SNAP Committee ICC not installed!"
              exit;
              fi
            ;;
        --separate+|-p)
            echo -e "\033[1;36m[1]\033[0m Install depedency"
            sudo xbps-install -Sy mesa-dri gimp gimp-python gimp-devel lcms lcms-devel gettext gettext-devel
            echo -e "\033[1;36m[2]\033[0m Preparing new dir $tmp"
            mkdir -p $tmp/separate+ >/dev/null 2>&1
            cd $tmp/separate+
            echo -e "\033[1;36m[3]\033[0m Download source code"
            wget -ncv "https://osdn.net/projects/separate-plus/downloads/51630/separate%2B-0.5.9-alpha3.zip" -O "separate+-0.5.9-alpha3.zip" >/dev/null 2>&1
            unzip -o -q separate+-0.5.9-alpha3.zip >/dev/null 2>&1
            cd separate+-0.5.9/
            echo -e "\033[1;36m[4]\033[0m Installing"
            make >/dev/null 2>&1
            sudo make PREFIX="/usr" install >/dev/null 2>&1
            sudo install -dm755 /usr/share/gimp/2.0/scripts
            sudo install -m644 sample-scripts/* /usr/share/gimp/2.0/scripts
            echo -e "\033[1;36m[FINISH]\033[0m Separate+ installed"
            ;;
        --wine-emu|-w)
            if [ $musl = 'm' ]; then
              echo -e "\033[1;36m[1]\033[0m Install wine for musl"
              sudo xbps-install -S wine wine-common wine-gecko wine-tools wine-mono winetricks zenity
              echo -e "\033[1;36m[FINISH]\033[0m Wine installed"
            else
              echo -e "\033[1;36m[1]\033[0m Install wine for glibc"
              sudo xbps-install -Sy void-repo-nonfree
              sudo xbps-install wine wine-32bit wine-common wine-gecko wine-tools wine-mono winetricks zenity
              echo -e "\033[1;36m[FINISH]\033[0m Wine installed"
            fi
            ;;
        --fish|-s)
            echo -e "\033[1;36m[1]\033[0m Install Fish shell"
            sudo xbps-install -Sy fish-shell >/dev/null 2>&1
            echo -e "\033[1;36m[1]\033[0m Apply Fish Shell for '$USER'"
            chsh -s /usr/bin/fish $USER
            cp -rf /etc/skel/.config/fish ~/.config
            if fish --version > /tmp/checkers >/dev/null 2>&1; then
              echo -e "\033[1;36m[FINISH]\033[0m Fish shell installed"
              else
              echo -e "\033[1;33m[FAILED]\033[0m Fish shell not installed!"
              exit;
              fi
            ;;
        --fix-fonts|-f)
            sudo ln -s /usr/share/fontconfig/conf.avail/10-hinting-slight.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/50-user.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo ln -s /usr/share/fontconfig/conf.avail/70-no-bitmaps.conf /etc/fonts/conf.d/ >/dev/null 2>&1
            sudo xbps-reconfigure -f fontconfig
            echo -e "\033[1;36m[FINISH]\033[0m Fix fonts. Done!"
            ;;
        --fix-lm|-lm)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="lite-musl"#'
            echo -e "\033[1;36m[FINISH]\033[0m Codename: lite-musl!"
            ;;
        --fix-lg|-lg)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="lite-glibc"#'
            echo -e "\033[1;36m[FINISH]\033[0m Codename: lite-glibc!"
            ;;
        --fix-pm|-pm)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="pro-musl"#'
            echo -e "\033[1;36m[FINISH]\033[0m Codename: pro-musl!"
            ;;
        --fix-pg|-pg)
            sudo sed -i /usr/bin/lsb_release -res'#^(codename).*#codename="pro-glibc"#'
            echo -e "\033[1;36m[FINISH]\033[0m Codename: pro-glibc!"
            ;;
        --help|-h)
            usage
            exit 0
            ;;
        --version|-v)
            echo -e "\033[1;33m $name\033[0m version $version"
            exit 0
            ;;
        *)
            echo -e "Please run : \033[1;33ml7-tools --update\033[0m"
            exit 2
    esac
done
